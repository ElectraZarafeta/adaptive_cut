#%%
from helper_functions import *
from scipy import cluster
import matplotlib.pyplot as plt
import numpy


def partition_density(partitions):
    Dc_list = []
    for cid in partitions:
        m, n = len(cid2edges[cid]), len(cid2nodes[cid])
        Dc_list.append(Dc(m, n))

    D = M * sum(Dc_list)

    return D

with open('output/link_clustering/num_edges.txt') as f:
    num_edges = int(f.read())

# the leader nodes of the clusters generated by linkage
cid2edges   = load_dict('output/link_clustering/cid2edges.pkl')
cid2nodes   = load_dict('output/link_clustering/cid2nodes.pkl')
newcid2cids = load_dict('output/link_clustering/newcid2cids.pkl')
groups      = load_dict('output/link_clustering/groups.pkl')
list_D_plot = load_dict('output/link_clustering/list_D_plot.pkl')
linkage     = load_dict('output/link_clustering/linkage.pkl')

similarity_value = max(list_D_plot,key=lambda item:item[0])[1]

linkage_new = numpy.array(linkage)

T = cluster.hierarchy.fcluster(linkage_new, t=similarity_value, criterion='distance')

leaders = cluster.hierarchy.leaders(linkage, T)[0]
M = 2/num_edges

#%%

for leader in leaders[:1]:

    # Move one level up
    partitions_up = []

    belonging_cid = [key  for (key, value) in newcid2cids.items() if leader in value][0]

    partitions_up = [leader_tmp for leader_tmp in leaders if leader_tmp not in newcid2cids[belonging_cid]]
    partitions_up.append(belonging_cid)

    ## Calculate partition density
    D = partition_density(partitions_up)

    # Move one level down
    partitions_down = [leader_tmp for leader_tmp in leaders if leader_tmp is not leader]
    ## find childs
    child = newcid2cids[leader][0]
    partitions_down = partitions_down + [group for group in groups if child in group][0]

    # Calculate partition density
    D = partition_density(partitions_down)


#%%


# MOVE TO PLOTS.PY FILE
# calculate labels
labels=list('' for i in range(num_edges))
for i in range(num_edges):
    labels[i]=str(i)+ ',' + str(T[i])

k = numpy.unique(T, return_counts=True)[0][-1]

# calculate color threshold
ct=linkage_new[-(k-1),2]  

#plot
P =cluster.hierarchy.dendrogram(linkage_new,labels=labels,color_threshold=ct)
plt.show()

#%%